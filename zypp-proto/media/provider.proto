/*---------------------------------------------------------------------\
|                          ____ _   __ __ ___                          |
|                         |__  / \ / / . \ . \                         |
|                           / / \ V /|  _/  _/                         |
|                          / /__ | | | | | |                           |
|                         /_____||_| |_| |_|                           |
|                                                                      |
----------------------------------------------------------------------*/

syntax = "proto3";
option optimize_for = LITE_RUNTIME;

package zypp.proto;

message DataField {
  string key = 1;
  oneof field_val {
    string str_val    = 2;
    int32  int_val    = 3;
    int64  long_val   = 4;
    double double_val = 5;
    bool   bool_val   = 6;
  }
}

/*!
 * This is the general message used to communicate between workers and the controller.
 * Based on the message_code a message is either a response, signal or request.
 * Every communication is initiated by a request, the ID given in the request message is used
 * through the lifetime of the request to link successive requests to the initial request.
 */
message ProvideMessage {
  uint32   request_id       = 1; //< the request ID set by the process initiating a request
  uint32   message_code     = 2; //< the response code, see documentation
  repeated DataField fields = 3;
}

// --------------------------------------------------------------------------
// ----------------- Handshake message Controller -> Worker -----------------
// --------------------------------------------------------------------------

message Configuration {
  map<string, string> values = 1; // A key value map of all worker related configurations
}


// --------------------------------------------------------------------------
// ----------------- Handshake Message Worker -> Controller -----------------
// --------------------------------------------------------------------------

/*!
 * Message that describes be capabilities of the worker process.
 * This ALWAYS has to be sent to the controller as the first message immediately after receiving the Configuration message
 */
message Capabilities {
  uint32 protocol_version   = 1;
  uint32 worker_type        = 2;
  uint32 cfg_flags          = 3;
  string worker_name        = 4;
  repeated DataField fields = 5; // customs fields for future extensions
}
